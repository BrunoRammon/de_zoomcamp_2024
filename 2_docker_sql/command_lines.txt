# by default postgres listen to the por 5432
# but I already have a postgres running in my local machine in the port 5432
# so this port is already being listen. And expose this port to the container
# will result in error since is already used by my local postgres service.
# we can expose another available port of my local machine like 5433. 
# so we can communicate with the container database through this port.
# Warning: use "-p 5433:5433" publishes the port 5433 (5433 after ":") of the 
# container to the port 5433 (5433 before ":") of the localhost. But the postgres 
# service in the container is listening, by default, to the container's port 5432
# so use "-p 5433:5433" do not allow to use the postgres service inside container.
# the correct command is "-p 5433:5432" where we publish the container's port 5432 
# to the localhost port 5433. In the local machine we use the port 5433 to communicate
# with the database that lives on the container.
docker run -it \
  -e POSTGRES_USER="root" \
  -e POSTGRES_PASSWORD="root" \
  -e POSTGRES_DB="ny_taxi" \
  -v $(pwd)/ny_taxi_postgres_data:/var/lib/postgresql/data \
  -p 5433:5432 \
  postgres:13

pgcli -h localhost -p 5433 -u root -d ny_taxi

# docker containers with network
docker network create pg-network

# running image postgres:13 (pulled from dockerhub)
docker run -it \
  -e POSTGRES_USER="root" \
  -e POSTGRES_PASSWORD="root" \
  -e POSTGRES_DB="ny_taxi" \
  -v $(pwd)/ny_taxi_postgres_data:/var/lib/postgresql/data \
  -p 5433:5432 \
  --network=pg-network \
  --name pg-database \
  postgres:13

# running image dpage/pgadmin4 (pulled from dockerhub)
docker run -it \
  -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
  -e PGADMIN_DEFAULT_PASSWORD="root" \
  -p 8080:80 \
  --network=pg-network \
  --name pgadmin \
  dpage/pgadmin4

# running the script on the localhost
URL="https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet"
python ingest_data.py \
  --user=root \
  --password=root \
  --host=localhost \
  --port=5433 \
  --db=ny_taxi \
  --table_name=yellow_taxi_data \
  --url=${URL}

# build local image from dockerfile and giving it a name
docker build -t taxi_ingest:v001 .

# dockerizing the script and running it inside a docker container 
# of the previous builded local image
URL="https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet"
docker run -it \
  --network=pg-network \
  taxi_ingest:v001 \
    --user=root \
    --password=root \
    --host=pg-database \
    --port=5432 \
    --db=ny_taxi \
    --table_name=yellow_taxi_data \
    --url=${URL}